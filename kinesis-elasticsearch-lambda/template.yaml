AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  kinesis-elasticsearch-lambda

  Sample SAM Template for kinesis-elasticsearch-lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
Parameters:
  KinesisStreamName:
    Type: String
  ESDomainName:
    Type: String
  ElasticsearchVersion:
    Description: User defined Elasticsearch Version
    Type: String
Resources:
  EsInserter:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables: 
          esEndpoint: !GetAtt ElasticSearchDomain.DomainEndpoint 

      CodeUri: kinesisHandler/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
        Statement:
          - Effect: Allow
            Action: 
              - 'es:*'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DescribeInstances'
              - 'ec2:AttachNetworkInterface'

            Resource: '*'
  KinesisHandler:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables: 
          esEndpoint: !GetAtt ElasticSearchDomain.DomainEndpoint 

      CodeUri: kinesisHandler/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
        Statement:
          - Effect: Allow
            Action: 
              - 'es:*'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DescribeInstances'
              - 'ec2:AttachNetworkInterface'

            Resource: '*'


          
      Events:
        KinesisPipe:
          Type: Kinesis # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Stream: !GetAtt KinesisPipe.Arn
            BatchSize: 100
            StartingPosition: LATEST
  KinesisPipe:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Ref KinesisStreamName
      RetentionPeriodHours: 24
      ShardCount: 1
  ElasticSearchDomain:
    Type: AWS::Elasticsearch::Domain
    DependsOn: ServiceLinkedRole
    Properties:
      DomainName: 
        Ref: ESDomainName
      ElasticsearchVersion:
        Ref: ElasticsearchVersion
      ElasticsearchClusterConfig:
        InstanceCount: 1
        InstanceType: "t2.medium.elasticsearch"
      EBSOptions:
        EBSEnabled: 'true'
        Iops: 0
        VolumeSize: 10
        VolumeType: standard
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: '*'
      SnapshotOptions:       
        AutomatedSnapshotStartHour: 17
      VPCOptions:
        SubnetIds:  
          - Ref: subnet
        SecurityGroupIds:
          - Ref: mySecurityGroup
  vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
  subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: vpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-northeast-2a
  subnetb:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: vpc
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: ap-northeast-2b  
  mySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: es sg
      VpcId:
        Ref: vpc
      GroupName: "dna-sg"
      SecurityGroupIngress:
        - FromPort: '443'
          IpProtocol: tcp
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  ServiceLinkedRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties: 
      AWSServiceName: es.amazonaws.com
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  KinesisName:
    Description: "Kinesis Stream Name"
    Value: !Ref KinesisStreamName
  KinesisArn:
    Description: "Kinesis Stream"
    Value: !Ref KinesisPipe
  KinesisHandlerArn:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !Ref KinesisHandler
        
